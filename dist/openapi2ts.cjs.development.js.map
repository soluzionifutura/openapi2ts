{"version":3,"file":"openapi2ts.cjs.development.js","sources":["../src/index.ts"],"sourcesContent":["import { readFileSync, writeFileSync } from \"fs\"\nimport { compile } from \"json-schema-to-typescript\"\nimport type { OpenAPIV3 } from \"openapi-types\"\n\nexport type Options = { \n  openapi: OpenAPIV3.Document | string\n  bannerComment?: string\n  outputFilePath?: string\n}\n\nconst _dig = (obj: any) => {\n  for (const key in obj) {\n    if (key === \"$ref\") {\n      const ref = obj[key].split(\"/\").pop()\n      delete obj[key]\n      obj.tsType = ref\n    } else if (typeof obj[key] === \"object\") {\n      _dig(obj[key])\n    }\n  }\n\n  return obj\n}\n\nexport async function parse({\n  openapi,\n  outputFilePath,\n  bannerComment = `/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/member-delimiter-style */\n/**\n * This file was automatically generated by openapi2ts.\n * DO NOT MODIFY IT BY HAND. Instead, modify the source\n * openapi definition and regenerate this file.\n */\n`\n}: Options): Promise<Set<string>> {\n  if (typeof openapi === \"string\") {\n    openapi = JSON.parse(readFileSync(openapi, \"utf8\")) as OpenAPIV3.Document\n  }\n\n  const exports = new Set<string>()\n\n  const data = bannerComment + (await Promise.all(Object.entries(openapi.components!.schemas!).map(([name, schema]) => {\n    if (exports.has(name)) {\n      throw new Error(`Duplicate schema name: ${name}`)\n    }\n\n    exports.add(name)\n\n    return compile(_dig(schema), name, {\n      bannerComment: \"\",\n      enableConstEnums: false,\n      style: {\n        semi: false\n      }\n    })\n  }))).join(\"\\n\")\n\n  if (outputFilePath) {\n    writeFileSync(outputFilePath, data)\n  }\n  \n  return exports\n}"],"names":["_dig","obj","key","ref","split","pop","tsType","parse","_x","_parse","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref","openapi","outputFilePath","_ref$bannerComment","bannerComment","exports","data","wrap","_callee$","_context","prev","next","JSON","readFileSync","Set","t0","Promise","all","Object","entries","components","schemas","map","_ref2","name","schema","has","Error","add","compile","enableConstEnums","style","semi","t1","sent","join","writeFileSync","abrupt","stop"],"mappings":"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"}